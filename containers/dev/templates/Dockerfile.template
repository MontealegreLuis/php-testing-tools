FROM php:7.0-cli

COPY ./config/group.sh /group.sh
COPY ./config/php.ini /usr/local/etc/php/

# Add execution permission
RUN chmod a+x /group.sh

# Create custom user and group to match the ones in the host machine
RUN /group.sh
RUN useradd -ms /bin/bash -g ${DEV_GROUP_ID} -u ${DEV_USER_ID} ${DEV_USER}
RUN mv /home/${DEV_USER}/.bashrc /etc/bashrc
COPY ./config/.bashrc /home/${DEV_USER}/.bashrc

# Install modules
RUN apt-get update && apt-get install -y \
    && apt-get install -y zlib1g zlib1g-dev git-core \
    && docker-php-ext-install pdo_mysql \
    && docker-php-ext-install mbstring \
    && docker-php-ext-install bcmath \
    && docker-php-ext-install zip

# Install Composer
RUN mkdir -p /composer/.composer
RUN mkdir -p /composer/vendor/bin

# Register the COMPOSER_HOME environment variable
ENV COMPOSER_HOME /composer

# Add global binary directory to PATH and make sure to re-export it
ENV PATH /composer/vendor/bin:$PATH

# Allow Composer to be run as root
ENV COMPOSER_ALLOW_SUPERUSER 1

# Setup the Composer installer
RUN curl -o /tmp/composer-setup.php https://getcomposer.org/installer \
  && curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \
  && php -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }"

RUN php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer && rm -rf /tmp/composer-setup.php

# Copy Composer's Github token
COPY ./config/auth.json /composer/

RUN composer --version

RUN chown -R ${DEV_USER} /composer

# Install PhantomJS
RUN apt-get install -y libfreetype6 libfontconfig bzip2
RUN apt-get install -y nodejs-legacy
RUN apt-get install -y npm
RUN npm install -g phantomjs-prebuilt

WORKDIR /usr/src/myapp

USER ${DEV_USER}
ENV HOME /home/${DEV_USER}

EXPOSE 8000 4444
